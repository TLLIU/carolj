#Profile for development

server.port=8088

#TRACE, DEBUG, INFO, WARN, ERROR, FATAL, OFF
logging.level.root=INFO
logging.level.com.tlliu=TRACE
logging.level.org.springframework.web=DEBUG
#不指定path就是当前目录下生成springboot.log
logging.file=spring.log
#logging.file=springboot.log
#当前磁盘下根路径创建spring文件中log文件夹，使用spring.log作为默认
#logging.path=/spring/log
#当前磁盘下根路径的/var/log文件夹，使用spring.log作为默认
#logging.path=/var/log
#控制台输出的日志格式 日期 + 线程号 + 靠左 级别 +全类名50字符限制+消息+换行
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n
#指定文件中日志输出的格式
logging.pattern.file=

#  驱动
# 通常不需要指定 driver-class-name，因为 Spring boot 可以从 url 推导出大多数数据库。
spring.datasource.driverClassName=org.h2.Driver
# h2 内存数据库 内存模式连接配置
spring.datasource.url=jdbc:h2:mem:test
spring.datasource.username=sa
spring.datasource.password=sa
# 初始化数据表 DDL
#spring.datasource.schema=classpath:sql/init.sql
#  初始化数据 DML
spring.datasource.data=classpath:sql/data.sql
# 数据库连接类型有HikariCP, tomcat-jdbc和common DBCP
#spring.datasource.type= 
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
# ddl-auto:create: 每次运行加载不管之前是否有数据都会自动创建一个表，会造成数据丢失。
# ddl-auto:update: 第一次加载会创建新的数据接口，之后只会在原有表基础之上进行迭代。
# ddl-auto:validate: 验证类里面的属性与表结构是否一致。
# ddl-auto:create-drop: 每次退出时删除。
# ddl-auto:none: 默认什么都不做。
spring.jpa.hibernate.ddl-auto=update

spring.jpa.show-sql=true
spring.jpa.database=h2
#    开启console 访问 默认false
spring.h2.console.enabled=true
#      开启h2 console 跟踪 方便调试  默认 false
spring.h2.settings.trace=true
#      允许console 远程访问 默认false
spring.h2.settings.web-allow-others=true
#  h2 访问路径上下文
spring.h2.path=/h2-console